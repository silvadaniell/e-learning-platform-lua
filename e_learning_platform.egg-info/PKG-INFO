Metadata-Version: 2.4
Name: e-learning-platform
Version: 1.0.0
Summary: AI-powered e-learning platform with personalized recommendations
Author-email: E-Learning Team <team@elearning.com>
License: MIT
Project-URL: Homepage, https://github.com/your-org/e-learning-platform
Project-URL: Documentation, https://your-org.github.io/e-learning-platform
Project-URL: Repository, https://github.com/your-org/e-learning-platform.git
Project-URL: Bug Tracker, https://github.com/your-org/e-learning-platform/issues
Keywords: e-learning,ai,education,machine-learning,fastapi
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Education
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Framework :: FastAPI
Classifier: Topic :: Education
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Requires-Python: >=3.11
Description-Content-Type: text/markdown
Requires-Dist: fastapi<0.105.0,>=0.104.0
Requires-Dist: uvicorn[standard]<0.25.0,>=0.24.0
Requires-Dist: sqlalchemy<2.1.0,>=2.0.20
Requires-Dist: aiosqlite>=0.19.0
Requires-Dist: pydantic[email]<3.0.0,>=2.5.0
Requires-Dist: pydantic-settings<3.0.0,>=2.1.0
Requires-Dist: python-jose[cryptography]<4.0.0,>=3.3.0
Requires-Dist: passlib[bcrypt]<2.0.0,>=1.7.4
Requires-Dist: python-multipart<1.0.0,>=0.0.6
Requires-Dist: jinja2<4.0.0,>=3.1.0
Requires-Dist: aiofiles<24.0.0,>=23.2.0
Requires-Dist: httpx<1.0.0,>=0.25.0
Requires-Dist: google-generativeai<1.0.0,>=0.3.0
Requires-Dist: lupa<3.0.0,>=2.0
Requires-Dist: diskcache<6.0.0,>=5.6.0
Requires-Dist: python-dotenv<2.0.0,>=1.0.0
Provides-Extra: dev
Requires-Dist: pytest>=7.4.0; extra == "dev"
Requires-Dist: pytest-asyncio>=0.21.0; extra == "dev"
Requires-Dist: pytest-cov>=4.1.0; extra == "dev"
Requires-Dist: black>=23.0.0; extra == "dev"
Requires-Dist: isort>=5.12.0; extra == "dev"
Requires-Dist: flake8>=6.0.0; extra == "dev"
Requires-Dist: mypy>=1.5.0; extra == "dev"
Provides-Extra: postgres
Requires-Dist: asyncpg<1.0.0,>=0.29.0; extra == "postgres"
Provides-Extra: redis
Requires-Dist: redis<6.0.0,>=5.0.0; extra == "redis"
Requires-Dist: celery<6.0.0,>=5.3.0; extra == "redis"
Provides-Extra: prod
Requires-Dist: gunicorn>=21.2.0; extra == "prod"
Requires-Dist: supervisor>=4.2.5; extra == "prod"

# üéì Sistema E-Learning com IA

Uma plataforma de e-learning moderna e inteligente que utiliza IA para personalizar a experi√™ncia de aprendizado, com arquitetura limpa, microservi√ßos e integra√ß√£o com Google Gemini.

## üöÄ Caracter√≠sticas Principais

### ü§ñ Intelig√™ncia Artificial
- **Recomenda√ß√µes Personalizadas**: Sistema de recomenda√ß√£o baseado em IA usando Google Gemini
- **Chatbot Inteligente**: Assistente virtual 24/7 com processamento de linguagem natural
- **An√°lise de Padr√µes**: An√°lise inteligente do comportamento de aprendizado
- **Scripts Lua**: L√≥gica de neg√≥cio implementada em Lua para flexibilidade

### üìö Gest√£o de Aprendizado
- **Trilhas Adaptativas**: Caminhos de aprendizado que se adaptam ao progresso do usu√°rio
- **Acompanhamento de Progresso**: M√©tricas detalhadas e analytics em tempo real
- **Conte√∫do Diversificado**: Suporte a v√≠deos, textos, quizzes e exerc√≠cios pr√°ticos
- **Avalia√ß√µes Inteligentes**: Sistema de avalia√ß√£o com feedback autom√°tico

### üèóÔ∏è Arquitetura Moderna
- **Arquitetura Limpa**: Separa√ß√£o clara de responsabilidades em camadas
- **Microservi√ßos**: Arquitetura distribu√≠da com Docker
- **API RESTful**: API completa com FastAPI e documenta√ß√£o autom√°tica
- **Frontend Responsivo**: Interface moderna com HTML5, CSS3 e JavaScript

### üîß Tecnologias Utilizadas
- **Backend**: Python 3.11, FastAPI, SQLAlchemy, Celery
- **Frontend**: HTML5, CSS3, JavaScript (Vanilla)
- **Banco de Dados**: PostgreSQL com otimiza√ß√µes
- **Cache**: Redis para sess√µes e cache
- **IA**: Google Gemini API
- **Scripts**: Lua para l√≥gica de neg√≥cio
- **Containeriza√ß√£o**: Docker e Docker Compose
- **Proxy**: Nginx para load balancing

## üìã Pr√©-requisitos

### Desenvolvimento
- Python 3.11+
- Docker e Docker Compose
- Git
- Chave API do Google Gemini

### Produ√ß√£o
- Servidor Linux (Ubuntu 20.04+ recomendado)
- Docker e Docker Compose
- Dom√≠nio e certificado SSL (opcional)
- Pelo menos 2GB RAM e 10GB de espa√ßo em disco

## ‚ö° Instala√ß√£o R√°pida

### 1. Clone o Reposit√≥rio
```bash
git clone <repository-url>
cd e-learning
```

### 2. Execute o Setup Autom√°tico

#### Linux/Mac:
```bash
chmod +x setup.sh
./setup.sh
```

#### Windows:
```cmd
setup.bat
```

### 3. Configure a API do Gemini
Edite o arquivo `.env` e adicione sua chave API:
```env
GEMINI_API_KEY=sua-chave-api-aqui
```

### 4. Acesse a Aplica√ß√£o
- **Aplica√ß√£o**: http://localhost:8000
- **Documenta√ß√£o da API**: http://localhost:8000/docs
- **Monitoramento Celery**: http://localhost:5555

## üõ†Ô∏è Instala√ß√£o Manual

### 1. Ambiente Virtual Python
```bash
python3 -m venv .venv
source .venv/bin/activate  # Linux/Mac
# ou
.venv\Scripts\activate     # Windows

pip install -r requirements.txt
```

### 2. Configura√ß√£o do Ambiente
```bash
cp env.example .env
# Edite o arquivo .env com suas configura√ß√µes
```

### 3. Banco de Dados
```bash
# Com Docker
docker-compose up -d postgres redis

# Inicializar tabelas
python -c "from infrastructure.database.connection import init_database; init_database()"
```

### 4. Executar Aplica√ß√£o
```bash
# Desenvolvimento
python -m uvicorn presentation.api.main:app --reload

# Produ√ß√£o
docker-compose up -d
```

## üìÅ Estrutura do Projeto

```
e-learning/
‚îú‚îÄ‚îÄ infrastructure/           # Camada de Infraestrutura
‚îÇ   ‚îú‚îÄ‚îÄ database/            # Configura√ß√£o do banco de dados
‚îÇ   ‚îú‚îÄ‚îÄ security/            # Autentica√ß√£o e seguran√ßa
‚îÇ   ‚îî‚îÄ‚îÄ integration/         # Integra√ß√µes externas (Gemini, Redis)
‚îú‚îÄ‚îÄ data_access/             # Camada de Acesso a Dados
‚îÇ   ‚îú‚îÄ‚îÄ repositories/        # Padr√£o Repository
‚îÇ   ‚îî‚îÄ‚îÄ external_services/   # Servi√ßos externos
‚îú‚îÄ‚îÄ business/                # Camada de Neg√≥cio
‚îÇ   ‚îú‚îÄ‚îÄ core/               # L√≥gica central
‚îÇ   ‚îú‚îÄ‚îÄ learning/           # Gest√£o de aprendizado
‚îÇ   ‚îî‚îÄ‚îÄ ai/                 # Servi√ßos de IA
‚îú‚îÄ‚îÄ presentation/            # Camada de Apresenta√ß√£o
‚îÇ   ‚îú‚îÄ‚îÄ api/                # Endpoints FastAPI
‚îÇ   ‚îî‚îÄ‚îÄ web/                # Frontend HTML/CSS/JS
‚îú‚îÄ‚îÄ docker/                 # Configura√ß√µes Docker
‚îú‚îÄ‚îÄ scripts/                # Scripts utilit√°rios
‚îî‚îÄ‚îÄ docs/                   # Documenta√ß√£o
```

## üîå API Endpoints

### Usu√°rios
- `POST /api/v1/users/` - Criar usu√°rio
- `GET /api/v1/users/{id}` - Obter perfil do usu√°rio
- `PUT /api/v1/users/{id}` - Atualizar usu√°rio
- `GET /api/v1/users/{id}/analytics` - Analytics do usu√°rio

### Trilhas de Aprendizado
- `GET /api/v1/trilhas/` - Listar trilhas
- `POST /api/v1/trilhas/` - Criar trilha
- `GET /api/v1/trilhas/{id}` - Detalhes da trilha
- `POST /api/v1/trilhas/{id}/enroll` - Inscrever-se na trilha

### Chatbot IA
- `POST /api/v1/chatbot/chat/{user_id}` - Conversar com o bot
- `GET /api/v1/chatbot/history/{user_id}` - Hist√≥rico de conversas
- `POST /api/v1/chatbot/quick-help/{user_id}` - Ajuda r√°pida

### Recomenda√ß√µes IA
- `GET /api/v1/recommendations/{user_id}` - Recomenda√ß√µes personalizadas
- `POST /api/v1/recommendations/analyze/{user_id}` - An√°lise de padr√µes
- `POST /api/v1/recommendations/search` - Busca inteligente

## üß™ Testes

### Executar Testes
```bash
# Ativar ambiente virtual
source .venv/bin/activate

# Executar testes
pytest

# Testes com cobertura
pytest --cov=.

# Testes espec√≠ficos
pytest tests/test_api.py
```

### Teste Manual da API
```bash
# Health check
curl http://localhost:8000/health

# Criar usu√°rio
curl -X POST "http://localhost:8000/api/v1/users/" \
  -H "Content-Type: application/json" \
  -d '{"nome": "Teste", "email": "teste@example.com", "perfil_aprend": "beginner"}'
```

## üê≥ Docker

### Desenvolvimento
```bash
# Iniciar todos os servi√ßos
docker-compose up -d

# Ver logs
docker-compose logs -f

# Parar servi√ßos
docker-compose down
```

### Produ√ß√£o
```bash
# Build e deploy
docker-compose -f docker-compose.prod.yml up -d

# Backup do banco
docker-compose exec postgres pg_dump -U elearning_user elearning_db > backup.sql
```

## üîß Configura√ß√£o

### Vari√°veis de Ambiente (.env)
```env
# Banco de Dados
DATABASE_URL=postgresql://user:pass@localhost:5432/elearning_db
POSTGRES_USER=elearning_user
POSTGRES_PASSWORD=elearning_pass
POSTGRES_DB=elearning_db

# Seguran√ßa
SECRET_KEY=sua-chave-secreta-super-segura
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# Google Gemini API
GEMINI_API_KEY=sua-chave-api-gemini

# Redis
REDIS_URL=redis://localhost:6379/0

# Aplica√ß√£o
DEBUG=true
HOST=0.0.0.0
PORT=8000
```

### Configura√ß√£o do Nginx (Produ√ß√£o)
```nginx
server {
    listen 80;
    server_name seu-dominio.com;
    
    location / {
        proxy_pass http://localhost:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
    
    location /static/ {
        alias /path/to/static/files/;
        expires 1y;
    }
}
```

## ü§ñ Integra√ß√£o com IA

### Google Gemini
A plataforma utiliza o Google Gemini para:
- Gerar recomenda√ß√µes personalizadas
- Processar conversas do chatbot
- Analisar conte√∫do de aprendizado
- Identificar padr√µes de comportamento

### Scripts Lua
L√≥gica de neg√≥cio implementada em Lua para:
- An√°lise de inten√ß√µes do chatbot
- C√°lculo de pontua√ß√µes de recomenda√ß√£o
- Processamento de regras de neg√≥cio
- Valida√ß√µes customizadas

## üìä Monitoramento

### M√©tricas Dispon√≠veis
- Usu√°rios ativos
- Taxa de conclus√£o de trilhas
- Tempo m√©dio de estudo
- Efic√°cia das recomenda√ß√µes IA
- Performance do sistema

### Logs
```bash
# Logs da aplica√ß√£o
docker-compose logs app

# Logs do banco de dados
docker-compose logs postgres

# Logs do Celery
docker-compose logs celery_worker
```

## üöÄ Deploy em Produ√ß√£o

### 1. Prepara√ß√£o do Servidor
```bash
# Instalar Docker
curl -fsSL https://get.docker.com -o get-docker.sh
sh get-docker.sh

# Instalar Docker Compose
sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
```

### 2. Configura√ß√£o de Produ√ß√£o
```bash
# Clonar reposit√≥rio
git clone <repository-url>
cd e-learning

# Configurar ambiente
cp env.example .env
# Editar .env com configura√ß√µes de produ√ß√£o

# Deploy
docker-compose -f docker-compose.prod.yml up -d
```

### 3. SSL/HTTPS (Opcional)
```bash
# Instalar Certbot
sudo apt install certbot python3-certbot-nginx

# Obter certificado
sudo certbot --nginx -d seu-dominio.com
```

## ü§ù Contribui√ß√£o

### Como Contribuir
1. Fork o projeto
2. Crie uma branch para sua feature (`git checkout -b feature/AmazingFeature`)
3. Commit suas mudan√ßas (`git commit -m 'Add some AmazingFeature'`)
4. Push para a branch (`git push origin feature/AmazingFeature`)
5. Abra um Pull Request

### Padr√µes de C√≥digo
- Seguir PEP 8 para Python
- Usar type hints
- Documentar fun√ß√µes e classes
- Escrever testes para novas funcionalidades
- Manter cobertura de testes > 80%

## üìù Licen√ßa

Este projeto est√° licenciado sob a Licen√ßa MIT - veja o arquivo [LICENSE](LICENSE) para detalhes.

## üÜò Suporte

### Problemas Comuns

#### Erro de Conex√£o com Banco
```bash
# Verificar se PostgreSQL est√° rodando
docker-compose ps postgres

# Reiniciar servi√ßos
docker-compose restart postgres
```

#### Erro na API do Gemini
```bash
# Verificar chave API no .env
grep GEMINI_API_KEY .env

# Testar conex√£o
python -c "import google.generativeai as genai; genai.configure(api_key='sua-chave'); print('OK')"
```

#### Problemas de Performance
```bash
# Verificar uso de recursos
docker stats

# Limpar cache Redis
docker-compose exec redis redis-cli FLUSHALL
```

### Contato
- üìß Email: suporte@elearning.com
- üí¨ Discord: [Link do Discord]
- üìñ Wiki: [Link da Wiki]
- üêõ Issues: [Link dos Issues]

## üéØ Roadmap

### Vers√£o 2.0
- [ ] Integra√ß√£o com mais provedores de IA
- [ ] Sistema de gamifica√ß√£o
- [ ] Aprendizado colaborativo
- [ ] Mobile app (React Native)
- [ ] Integra√ß√£o com LMS externos

### Vers√£o 1.5
- [ ] Sistema de certificados
- [ ] Relat√≥rios avan√ßados
- [ ] Integra√ß√£o com calend√°rio
- [ ] Notifica√ß√µes push
- [ ] Modo offline

---

**Desenvolvido com ‚ù§Ô∏è para revolucionar a educa√ß√£o atrav√©s da IA**
